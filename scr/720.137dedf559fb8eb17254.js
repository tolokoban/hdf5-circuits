"use strict";(self.webpackChunk_=self.webpackChunk_||[]).push([[720],{435:(n,e,t)=>{t.d(e,{A:()=>l});var r=t(1354),s=t.n(r),o=t(6314),a=t.n(o)()(s());a.push([n.id,'ul.src-components-Attributes-Attributes-module_attributes_mBUDPb {\n    margin: 0.25em 0;\n    padding: 0.5em;\n    color: var(--theme-color-on-neutral-5);\n    background: var(--theme-color-neutral-5);\n    border-radius: 0.5em;\n}\n\n.src-components-Attributes-Attributes-module_attributes_mBUDPb li::marker {\n    content: "";\n}\n\n.src-components-Attributes-Attributes-module_empty_qDO80O {\n    font-style: italic;\n    margin: 0.25em 0;\n}\n',"",{version:3,sources:["webpack://./src/components/Attributes/Attributes.module.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,cAAc;IACd,sCAAsC;IACtC,wCAAwC;IACxC,oBAAoB;AACxB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB",sourcesContent:['ul.attributes {\n    margin: 0.25em 0;\n    padding: 0.5em;\n    color: var(--theme-color-on-neutral-5);\n    background: var(--theme-color-neutral-5);\n    border-radius: 0.5em;\n}\n\n.attributes li::marker {\n    content: "";\n}\n\n.empty {\n    font-style: italic;\n    margin: 0.25em 0;\n}\n'],sourceRoot:""}]),a.locals={attributes:"src-components-Attributes-Attributes-module_attributes_mBUDPb",empty:"src-components-Attributes-Attributes-module_empty_qDO80O"};const l=a},1703:(n,e,t)=>{t.d(e,{A:()=>l});var r=t(1354),s=t.n(r),o=t(6314),a=t.n(o)()(s());a.push([n.id,".src-components-Dataset-Dataset-module_dataset_RViG09 {\n    margin: 0.25em 0;\n    padding: 0.25em;\n    border-radius: 0.25em;\n    background: var(--theme-color-neutral-4);\n    color: var(--theme-color-on-neutral-4);\n}\n\n.src-components-Dataset-Dataset-module_dataset_RViG09 > code {\n    display: inline-block;\n    font-size: 80%;\n    margin: 0.5em 0;\n    opacity: 0.7;\n}\n","",{version:3,sources:["webpack://./src/components/Dataset/Dataset.module.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,eAAe;IACf,qBAAqB;IACrB,wCAAwC;IACxC,sCAAsC;AAC1C;;AAEA;IACI,qBAAqB;IACrB,cAAc;IACd,eAAe;IACf,YAAY;AAChB",sourcesContent:[".dataset {\n    margin: 0.25em 0;\n    padding: 0.25em;\n    border-radius: 0.25em;\n    background: var(--theme-color-neutral-4);\n    color: var(--theme-color-on-neutral-4);\n}\n\n.dataset > code {\n    display: inline-block;\n    font-size: 80%;\n    margin: 0.5em 0;\n    opacity: 0.7;\n}\n"],sourceRoot:""}]),a.locals={dataset:"src-components-Dataset-Dataset-module_dataset_RViG09"};const l=a},7099:(n,e,t)=>{t.d(e,{A:()=>l});var r=t(1354),s=t.n(r),o=t(6314),a=t.n(o)()(s());a.push([n.id,".src-components-Group-Group-module_group_wJCTWr > div.src-components-Group-Group-module_children_cfd_Pm {\n    margin-left: 1em;\n}\n\n.src-components-Group-Group-module_group_wJCTWr summary {\n    border-radius: 0.25em;\n    color: var(--theme-color-on-primary-7);\n    background: var(--theme-color-primary-7);\n    margin: 1px 0;\n    padding: 0 1em;\n}\n","",{version:3,sources:["webpack://./src/components/Group/Group.module.css"],names:[],mappings:"AAAA;IACI,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,sCAAsC;IACtC,wCAAwC;IACxC,aAAa;IACb,cAAc;AAClB",sourcesContent:[".group > div.children {\n    margin-left: 1em;\n}\n\n.group summary {\n    border-radius: 0.25em;\n    color: var(--theme-color-on-primary-7);\n    background: var(--theme-color-primary-7);\n    margin: 1px 0;\n    padding: 0 1em;\n}\n"],sourceRoot:""}]),a.locals={group:"src-components-Group-Group-module_group_wJCTWr",children:"src-components-Group-Group-module_children_cfd_Pm"};const l=a},9720:(n,e,t)=>{t.r(e),t.d(e,{default:()=>W});var r=t(4848),s=t(5072),o=t.n(s),a=t(7825),l=t.n(a),c=t(7659),i=t.n(c),A=t(5056),m=t.n(A),u=t(540),d=t.n(u),p=t(1113),C=t.n(p),g=t(7099),h={};h.styleTagTransform=C(),h.setAttributes=m(),h.insert=i().bind(null,"head"),h.domAPI=l(),h.insertStyleElement=d(),o()(g.A,h);const b=g.A&&g.A.locals?g.A.locals:void 0;var v=t(3506),I=t(435),f={};f.styleTagTransform=C(),f.setAttributes=m(),f.insert=i().bind(null,"head"),f.domAPI=l(),f.insertStyleElement=d(),o()(I.A,f);const x=I.A&&I.A.locals?I.A.locals:void 0;function B({className:n,attrs:e}){const t=Object.keys(e);return 0===t.length?(0,r.jsx)("div",{className:x.empty,children:"No attributes."}):(0,r.jsx)("ul",{className:y(n,x.attributes),children:t.map((n=>(0,r.jsxs)("li",{children:[(0,r.jsx)("strong",{children:n}),": ",e[n]]},n)))})}function y(...n){return n.filter((n=>"string"==typeof n)).join(" ")}var _=t(1703),j={};j.styleTagTransform=C(),j.setAttributes=m(),j.insert=i().bind(null,"head"),j.domAPI=l(),j.insertStyleElement=d(),o()(_.A,j);const k=_.A&&_.A.locals?_.A.locals:void 0;function w({className:n,value:e}){return e?(0,r.jsxs)("div",{className:G(n,k.dataset),children:[(0,r.jsxs)("code",{children:["[",e.slice(0,16).map((n=>n.toFixed(3))).join(", "),e.length>16&&(0,r.jsx)("span",{children:", ..."}),"]"]}),e.length>16&&(0,r.jsxs)("div",{children:[(0,r.jsx)("strong",{children:e.length})," elements"]})]}):null}function G(...n){return n.filter((n=>"string"==typeof n)).join(" ")}function D({className:n,path:e}){const t=v.U.data.useValue();return t?(0,r.jsxs)("details",{className:T(n,b.group),open:""===e,children:[(0,r.jsx)("summary",{children:e.split("/").at(-1)||(0,r.jsx)("strong",{children:"ROOT"})}),(0,r.jsx)(w,{value:t.value(e)}),(0,r.jsxs)("div",{className:b.children,children:[(0,r.jsx)(B,{attrs:t.attrs(e)}),t.keys(e).map((n=>(0,r.jsx)(D,{path:[e,n].join("/")},n)))]})]}):null}function T(...n){return n.filter((n=>"string"==typeof n)).join(" ")}var N=t(5968);function W(){const n=v.U.data.useValue();return n?(0,r.jsxs)(N.UkC,{template:"*1",orientation:"row",children:[(0,r.jsxs)(N.UkC,{template:"*1",orientation:"column",children:[(0,r.jsx)(N.sWC,{color:"primary-1",padding:"M",children:(0,r.jsx)("strong",{children:n.filename})}),(0,r.jsx)(N.sWC,{color:"neutral-3",overflow:"auto",padding:"S",maxWidth:"480px",children:(0,r.jsx)(D,{path:""})})]}),(0,r.jsx)(N.sWC,{color:"neutral-3",children:"Here will come the viewer..."})]}):null}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,